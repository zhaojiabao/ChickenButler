<template>
	<div class="material-chart">
		<div class="select-type">
			<button-tab v-model="type">
				<button-tab-item v-for="tab in tabArr">{{ tab }}</button-tab-item>
			</button-tab>
		</div>
		<div class="line"></div>

		<group>
			<x-address :title="title" @on-hide="logHide" v-model="value" value-text-align="left" :list="addressData" :placeholder="area" :hide-district="false">
				<template slot="title" scope="props">
					<div :class="props.labelClass" :style="props.labelStyle" style="height:24px;line-height: 24px;width: 60px;">
						<icon name="map-marker" scale="1.3" class="l" style="width: 24px;"></icon>
						<div class="l">定位：</div>
					</div>
				</template>
			</x-address>
		</group>

		<iframe width="100%" border="no" :src="url"></iframe>
		
		<div class="h60"></div>
		<footer class="ui-footer ui-footer-stable ui-border-t">
			<ul class="ui-tiled">
				<template v-for="(date,i) in dates">
					<li :class="{active:i==cdate}" @click="cdate = i">{{ date }}</li>
				</template>
			</ul>
		</footer>

	</div>
</template>

<script>
	import { Cell, ButtonTab, ButtonTabItem, XAddress, Group } from 'vux'
	import { McArea } from '../../api/EggPrice'
	import 'vue-awesome/icons/map-marker'
	import Icon from 'vue-awesome/components/Icon'

	let base = "https://api.danji.jianong.com/map/chart/feed_price/";
	let cdate_arr = ['w', 'm', 'q', 'y'];
	export default {
		components: {
			Cell,
			ButtonTab,
			ButtonTabItem,
			XAddress,
			Group,
			Icon
		},
		mounted() {
			this.$store.state.header.title = '原料曲线';
			this.area = this.util.deepClone(this.$store.state.egg_price.area);
			if(this.$route.query.area != undefined) {
				this.area = decodeURI(this.$route.query.area);
				this.$store.state.header.is_show_header = false;
			}
			McArea().then(rs => {
				this.addressData = this.util.haddleAddressData(rs);
			})
			//alert(document.documentElement.clientHeight);
		},
		watch: {
			'area': 'init',
			'type': 'init',
			'cdate': 'init',
		},
		methods: {
			init() {
				let cdate = cdate_arr[this.cdate];
				this.url = `${base}type/${this.type}/area/${this.area}/date/${cdate}`;
			},
			onReady(instance) {
				this.echart = instance;
				this.init();
			},
			onClick(event, instance, echarts) {
				console.log(arguments);
			},
			logHide(str) {
				if(str) {
					var area = [];
					for(var i = 0; i < this.value.length; i++) {
						area[i] = this.getAddressName(this.value[i]);
					}
					this.area = area.join(',');
				}
			},
			logShow(str) {
				console.log('on-show')
			},
			getAddressName(value) {
				for(var i = 0; i < this.addressData.length; i++) {
					if(value == this.addressData[i].value) return this.addressData[i].name;
				}
			}
		},
		data() {
			return {
				title: '',
				loading: true,
				echart: null,
				type: 0,
				area: '',
				url: '',
				value: [],
				dates: ['周', '月', '季', '年'],
				tabArr: ['玉米', '豆粕'],
				addressData: [],
				cdate: 1
			}
		}

	}
</script>

<style>
	.vux-popup-picker-placeholder {
		color: #333333
	}
	
	.material-chart iframe {
		border: none;
		height: 70vh;
	}
	
	.ui-footer {
		position: fixed;
		bottom: 0;
		width: 100%;
	}
	
	.ui-tiled {
		display: -moz-box;
		display: -webkit-box;
		display: -ms-flexbox;
		display: box;
	}
	
	.ui-tiled li {
		-webkit-box-flex: 1;
		height: 50px;
		line-height: 50px;
		border-top: 1px solid #57B663;
		border-right: 1px solid #57B663;
		text-align: center;
		color: #333333;
		cursor: pointer;
		background: #FFFFFF;
	}
	
	.ui-tiled li:last-child {
		border-right: none;
	}
	
	.ui-tiled li.active {
		background: #57B663;
		color: #FFFFFF
	}
</style>
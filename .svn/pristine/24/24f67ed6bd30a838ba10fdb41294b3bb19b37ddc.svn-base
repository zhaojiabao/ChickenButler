<template>

	<div class="login">

		<div class="logo">
			<img src="../assets/logo.png" />
		</div>

		<div class="content">

			<group>
				<x-input placeholder="请输入手机号" v-model="user.user_name">
					<img slot="label" class="input-icon" src="../assets/images/icon_phone.png" width="14">
				</x-input>
			</group>

			<group class="weui-cells_form" v-show="is_regist">
				<x-input placeholder="请输入验证码" class="weui-vcode" v-model="user.code">
					<x-button slot="right" type="primary" plain mini @click.native="getCode">{{ btn_msg }}</x-button>
					<img slot="label" class="input-icon" src="../assets/images/icon_key.png" width="14">
				</x-input>
			</group>

			<group>
				<x-input placeholder="请输入密码" type="password" v-model="user.user_pwd">
					<img slot="label" class="input-icon" src="../assets/images/icon_lock.png" width="14">
				</x-input>
			</group>

			<div class="note of" v-show="!is_regist">
				<label>
					<check-icon :value.sync="remeber_pwd" type="plain">记住密码</check-icon>
				</label>
				<div class="r">
					找回密码
				</div>
			</div>

			<x-button type="primary" class="border-radius" v-show="!is_regist" @click.native="onLogin">登录</x-button>

			<x-button :plain="!is_regist" type="primary" class="border-radius" @click.native="onRegist">注册</x-button>

			<div class="bottom">
				<img src="https://api.danjiguanjia.com/public/image/code.png" />
				<p>
					扫码下载APP
				</p>
			</div>

		</div>

	</div>

</template>

<script>
	import { XInput, Group, XButton, Cell, CheckIcon } from 'vux'
	import { userLogin, getCode, register } from "../api/api"

	export default {
		components: {
			XInput,
			XButton,
			Group,
			Cell,
			CheckIcon
		},
		data() {
			return {
				remeber_pwd: true,
				is_regist: false,
				user: {
					user_name: "",
					user_pwd: "",
					code: "",
					decive: 'WX'
				},
				rules: {
					user_name: [{
						required: true,
						message: '手机号不能为空！'
					}, {
						type: 'phone',
						message: '手机号格式不正确！'
					}],
					user_pwd: [{
						required: true,
						message: '密码不能为空！'
					}],
					code: [{
						required: true,
						message: '验证码不能为空！'
					}, {
						min: 1000,
						max: 9999,
						message: '验证码不正确！'
					}]
				},
				btn_msg: '获取验证码',
				time: 60,
				stop: true,
				interval: ''
			}
		},
		mounted() {
			//设置标题
			this.init();
		},
		watch: {
			'$route.name': 'init'
		},
		methods: {
			init() {
				//判断当前页面为哪个页面
				this.is_regist = this.$route.name == 'regist';
				if(this.is_regist) {
					this.$store.state.header.title = '注册';
				} else {
					this.$store.state.header.title = '登录';
				}
				this.$store.state.header.border = false;
			},
			onRegist() {
				//判断是否为注册状态
				if(this.is_regist) {
					var rs = this.checkForm();
					if(rs == false) return false;
					register(this.user).then(rs => {
						if(rs.retcode == 2000) {
							this.$vux.toast.text("注册成功，请您登陆！");
							this.$router.push('login')
						} else if(rs.retcode == 4009) {
							this.message("验证码错误");
						} else if(rs.retcode == 4002) {
							this.$vux.toast.text("用户已存在,请直接登录");
							this.$router.push('login')
						}
					})
				} else {
					this.$router.push('regist')
				}
			},
			onLogin() {
				var rs = this.checkForm();
				if(rs == false) return false;
				userLogin(this.user).then(rs => {
					if(rs.retcode == 2000) {
						this.$vux.toast.text("恭喜您，登录成功！");
						this.$store.state.ticket = rs.data.ticket;
						localStorage.setItem('ticket', rs.data.ticket);
						//跳转回来源页
						if(this.$store.state.source_url_name == "") {
							this.$router.push('/p/egg-price');
						} else {
							this.$router.push(this.$store.state.source_url_name);
						}

					} else {
						this.$vux.toast.text(rs.msg);
					}
				});
			},
			getCode() {
				if(this.user.user_name && this.user.user_pwd) {
					getCode({
						'phone': this.user.user_name
					}).then(rs => {
						if(rs.retcode == 4003) {
							this.$vux.toast.text("该手机号已注册!");
						} else {
							clearInterval(this.interval);
							this.interval = setInterval(this.timer, 1000);
							this.time = 60;
						}
					}).catch(function(err) {
						this.$vux.toast.text("网络错误!");
					})
				} else {
					this.$vux.toast.text("请先填写手机号、密码");
				}
			},
			timer() {
				if(this.time > 0) {
					this.time--;
					this.btnMsg = this.time > 0 ? this.time + 's' : '重新获取';
					this.stop = false;
				} else if(this.time == 0) {
					this.stop = true;
					clearInterval(this.interval);
				}
			},
			//检测表单
			checkForm() {
				var rs = true;
				outerloop:
					for(var i in this.rules) {
						if(i == 'code' && this.is_regist == false) break;
						for(var j = 0; j < this.rules[i].length; j++) {
							rs = this.verify(this.user[i], this.rules[i][j]);
							if(rs == false) break outerloop;
						}
					}
				return rs;
			},
			//验证数据合法性
			verify(val, rules) {
				if(rules.required && val == "") {
					this.$vux.toast.text(rules.message);
					return false;
				}
				if(typeof(rules.min) != 'undefined' || typeof(rules.max) != 'undefined') rules.type = 'size';
				if(typeof(rules.type) == 'undefined') return true;
				var is_rule = true;
				switch(rules.type) {
					case 'phone':
						if(!(/^1[3|4|5|7|8]\d{9}$/.test(val))) is_rule = false;
						break;
					case 'size':
						if(val < rules.min || val > rules.max) is_rule = false;
						break;
					case 'number':
						if(!/^[0-9]*$/.test(val)) is_rule = false;
						break;
					default:
						rules.message = '未知错误';
						is_rule = false;
						break;
				}
				if(!is_rule) this.$vux.toast.text(rules.message);
				return is_rule;
			}
		}
	}
</script>

<style lang='less'>
	.login {
		font-size: 12px;
		.logo {
			width: 40%;
			height: 32vh;
			margin: auto;
			display: flex;
			align-items: center;
			img {
				width: 100%;
			}
		}
		.content {
			width: 70%;
			margin: auto;
			li {
				background: #42B983;
			}
			.note {
				margin: 15px 0 30px 0;
			}
			.weui-cells:before {
				border-top: none;
			}
			.input-icon {
				padding-right: 10px;
				display: block;
			}
			.border-radius {
				border-radius: 99px;
			}
		}
		.bottom {
			width: 80%;
			margin:30px auto;
			text-align: center;
			font-size: 14px;
			img {
				width: 80%;
				display: block;
				margin: 10px auto;
				margin-top: 30px;
			}
		}
	}
</style>